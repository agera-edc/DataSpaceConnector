name: Test Code (Style, Tests)

on:
  push:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:

  Azure-Storage-Integration-Test:
    runs-on: ubuntu-latest

    services:
      azurite:
        image: mcr.microsoft.com/azure-storage/azurite
        ports:
          - 10000:10000
        env:
          AZURITE_ACCOUNTS: account1:key1;account2:key2

    steps:
      - uses: actions/checkout@v2

      - name: Setup Java
        uses: ./.github/actions/setup-java

      - name: Azure Storage Tests
        uses: ./.github/actions/run-tests
        with:
          command: ./gradlew -p extensions/azure test -DincludeTags="AzureStorageIntegrationTest"

  Check-Cosmos-Key:
    runs-on: ubuntu-latest
    steps:
      - id: has-cosmos-key
        env:
          HAS_COSMOS_KEY: ${{ secrets.COSMOS_KEY }}
        if: "${{ env.HAS_COSMOS_KEY != '' }}"
        run: echo "::set-output name=defined::true"
    outputs:
      has-cosmos-key: ${{ steps.has-cosmos-key.outputs.defined }}

  Azure-CosmosDB-Integration-Test:
    # run only if COSMOS_KEY is present
    needs: [ Check-Cosmos-Key ]
    if: needs.Check-Cosmos-Key.outputs.has-cosmos-key == 'true'
    runs-on: ubuntu-latest

    env:
      COSMOS_KEY: ${{ secrets.COSMOS_KEY }}
      COSMOS_URL: ${{ secrets.COSMOS_URL }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Java
        uses: ./.github/actions/setup-java

      - name: Azure CosmosDB Tests
        uses: ./.github/actions/run-tests
        with:
          command: ./gradlew -p extensions/azure/cosmos test -DincludeTags="AzureCosmosDbIntegrationTest"

  Upload-Test-Report:
    needs:
      - Azure-Storage-Integration-Test
      - Azure-CosmosDB-Integration-Test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "**/test-results/**/*.xml"
