name: Integration Tests

on: [ push, pull_request ]

# Grant permissions to obtain federated identity credentials
# see https://docs.github.com/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-azure
permissions:
  id-token: write
  contents: read

jobs:

  Azure-Storage-Integration-Test:
    runs-on: ubuntu-latest

    services:
      azurite:
        image: mcr.microsoft.com/azure-storage/azurite
        ports:
          - 10000:10000
        env:
          AZURITE_ACCOUNTS: account1:key1;account2:key2

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: Azure Storage Tests
        run: ./gradlew -p extensions/azure test -DincludeTags="AzureStorageIntegrationTest"

  Azure-CosmosDB-Integration-Test:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      # Cosmos DB Emulator is preinstalled on GitHub Actions workers
      - name: Launch Cosmos DB Emulator
        run: |
          Import-Module "$env:ProgramFiles\Azure Cosmos DB Emulator\PSModules\Microsoft.Azure.CosmosDB.Emulator"
          Start-CosmosDbEmulator -Timeout 1200

      - name: Azure CosmosDB Tests
        run: ./gradlew -p extensions/azure/cosmos test -DincludeTags="AzureCosmosDbIntegrationTest"

  Aws-Integration-Test:
    runs-on: ubuntu-latest

    services:
      minio:
        image: bitnami/minio:latest
        ports:
          - 9000:9000
        env:
          MINIO_ROOT_USER: root
          MINIO_ROOT_PASSWORD: password

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: AWS S3 Tests
        env:
          S3_ACCESS_KEY_ID: root
          S3_SECRET_ACCESS_KEY: password
        run: ./gradlew -p extensions/aws/s3 test -DincludeTags="AwsS3IntegrationTest"

      - name: AWS S3 StatusChecker Test
        env:
          S3_ACCESS_KEY_ID: root
          S3_SECRET_ACCESS_KEY: password
        run: ./gradlew extensions:aws:s3:s3-data-operator:check

  Daps-Integration-Test:
    runs-on: ubuntu-latest

    steps:
      - name: reset permissions to permit checkout (because the omejdn volumes)
        run: sudo chown -R $USER:$USER ${{ github.workspace }}

      - uses: actions/checkout@v2

      - run: docker run -d --rm -p 4567:4567 -v ${{ github.workspace }}/extensions/iam/daps/src/test/resources/config:/opt/config -v ${{ github.workspace }}/extensions/iam/daps/src/test/resources/keys:/opt/keys ghcr.io/fraunhofer-aisec/omejdn-server:1.3.1

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: Daps Integration Tests
        run: ./gradlew -p extensions/iam/daps test -DincludeTags="DapsIntegrationTest"

  Check-Cloud-Environments:
    environment: Azure-dev
    runs-on: ubuntu-latest
    steps:
      - id: has-azure
        env:
          HAS_AZURE: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        if: "${{ env.HAS_AZURE != '' }}"
        run: echo "::set-output name=defined::true"
    outputs:
      has-azure: ${{ steps.has-azure.outputs.defined }}

  Azure-Cloud-Integration-Test:
    needs: [ Check-Cloud-Environments ]
    if: needs.Check-Cloud-Environments.outputs.has-azure == 'true'
    environment: Azure-dev
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Fetch Terraform outputs"
        run: echo $RUNTIME_SETTINGS > resources/azure/testing/runtime_settings.properties
        env:
          RUNTIME_SETTINGS: ${{ secrets.RUNTIME_SETTINGS }}

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: Data Plane Azure Data Factory Test
        run: ./gradlew -p extensions/azure/data-plane/data-factory test -DincludeTags="AzureDataFactoryIntegrationTest"

