name: Integration Tests

on: [ push, pull_request ]

jobs:

  Azure-Blobstorage-Integration-Test:
    runs-on: ubuntu-latest

    services:
      azurite:
        image: mcr.microsoft.com/azure-storage/azurite
        ports:
          - 10000:10000
        env:
          AZURITE_ACCOUNTS: account1:key1

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Object Storage StatusChecker Test
        env:
          RUN_INTEGRATION_TEST: true
        run: ./gradlew extensions:azure:blobstorage:blob-provision:check

  Azure-CosmosDB-Integration-Test:
    # Seems like cosmosdb emulator runs only on ubuntu 18.04: https://github.com/microsoft/azure-pipelines-tasks/issues/15865
    runs-on: ubuntu-18.04

    steps:
      - run: echo "IP_ADDRESS=$(ip addr | grep 'inet ' | grep -Fv 127.0.0.1 | awk '{print $2}' | head -n 1 | cut -d/ -f1)" >> $GITHUB_ENV
      - run: echo "IP Address = $IP_ADDRESS"
      - run: |
          docker run -d -p 8081:8081 -p 10251:10251 -p 10252:10252 -p 10253:10253 -p 10254:10254 --name=test-linux-emulator \
            -m 3g --cpus=2.0 \
            -e AZURE_COSMOS_EMULATOR_PARTITION_COUNT=1 -e AZURE_COSMOS_EMULATOR_IP_ADDRESS_OVERRIDE=$IP_ADDRESS \
            -it mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator

      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Set cosmos certificate as key for tests
        run: |
          echo "Wait until CosmosDB is ready"
          while [[ "$(curl -s -k -i -w "%{http_code}" -o /dev/null https://$IP_ADDRESS:8081/_explorer/emulator.pem)" != "200" ]]; do sleep 1; done

          echo "Get CosmosDB certificate"
          curl -k https://$IP_ADDRESS:8081/_explorer/emulator.pem >> certificate

          echo "COSMOS_CERT=$PWD/certificate" >> $GITHUB_ENV
          docker ps

      - name: CosmosDB Transfer Process Store Test
        env:
          RUN_INTEGRATION_TEST: true
        run: ./gradlew extensions:azure:cosmos:transfer-process-store-cosmos:check

      - name: Cosmos-based Asset Index test
        env:
          RUN_INTEGRATION_TEST: true
        run: ./gradlew extensions:azure:cosmos:assetindex-cosmos:check

      - name: Cosmos-based FCN Directory test
        env:
          RUN_INTEGRATION_TEST: true
        run: ./gradlew extensions:azure:cosmos:transfer-process-store-cosmos:check

      - name: Cosmos-based ContractDefinitionStore Test
        env:
          RUN_INTEGRATION_TEST: true
        run: ./gradlew extensions:azure:cosmos:contract-definition-store-cosmos:check

      - name: Cosmos-based ContractNegotiationStore Test
        env:
          RUN_INTEGRATION_TEST: true
        run: ./gradlew extensions:azure:cosmos:contract-negotiation-store-cosmos:check

  Aws-Integration-Test:
    runs-on: ubuntu-latest

    services:
      minio:
        image: bitnami/minio:latest
        ports:
          - 9000:9000
        env:
          MINIO_ACCESS_KEY: root
          MINIO_SECRET_KEY: password

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: AWS S3 StatusChecker Test
        env:
          RUN_INTEGRATION_TEST: true
          S3_ACCESS_KEY_ID: root
          S3_SECRET_ACCESS_KEY: password
        run: ./gradlew extensions:aws:s3:s3-provision:check

  Daps-Integration-Test:
    runs-on: ubuntu-latest

    steps:
      - name: reset permissions to permit checkout (because the omejdn volumes)
        run: sudo chown -R $USER:$USER ${{ github.workspace }}

      - uses: actions/checkout@v2

      - run: docker run -d --rm -p 4567:4567 -v ${{ github.workspace }}/extensions/iam/daps/src/test/resources/config:/opt/config -v ${{ github.workspace }}/extensions/iam/daps/src/test/resources/keys:/opt/keys ghcr.io/fraunhofer-aisec/omejdn-server:1.3.1

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Daps Integration Test
        env:
          RUN_INTEGRATION_TEST: true
        run: ./gradlew clean extensions:iam:daps:check